Description: Fix Buffer warnings by switching to Buffer.from()
Author: Nilesh Patra <npatra974@gmail.com>
Bug: https://github.com/gruntjs/grunt-legacy-util/issues/27
Forwarded: https://github.com/gruntjs/grunt-legacy-util/pull/28/files
Reviewed-By: Xavier Guimard <yadd@debian.org>
Last-Update: 2020-01-30

--- a/index.js
+++ b/index.js
@@ -183,16 +183,16 @@
   }
 
   var child = spawn(cmd, args, opts.opts);
-  var stdout = new Buffer('');
-  var stderr = new Buffer('');
+  var stdout = Buffer.from('');
+  var stderr = Buffer.from('');
   if (child.stdout) {
     child.stdout.on('data', function(buf) {
-      stdout = Buffer.concat([stdout, new Buffer(buf)]);
+      stdout = Buffer.concat([stdout, Buffer.from(buf)]);
     });
   }
   if (child.stderr) {
     child.stderr.on('data', function(buf) {
-      stderr = Buffer.concat([stderr, new Buffer(buf)]);
+      stderr = Buffer.concat([stderr, Buffer.from(buf)]);
     });
   }
   child.on('close', function(code) {
--- a/test/fixtures/spawn-multibyte.js
+++ b/test/fixtures/spawn-multibyte.js
@@ -4,7 +4,7 @@
 // A multibyte buffer containing all our output. We will slice it later.
 // In this case we are using a Japanese word for hello / good day, where each
 // character takes three bytes.
-var fullOutput = new Buffer('こんにちは');
+var fullOutput = Buffer.from('こんにちは');
 
 // Output one full character and one third of a character
 process.stdout.write(fullOutput.slice(0, 4));
--- a/test/index.js
+++ b/test/index.js
@@ -479,10 +479,10 @@
   'buffer': function(test) {
     test.expect(1);
     var actual = util.recurse({
-      buf: new Buffer('buf'),
+      buf: Buffer.from('buf'),
     }, this.typeValue);
     var expected = {
-      buf: {type: 'buffer', value: new Buffer('buf')},
+      buf: {type: 'buffer', value: Buffer.from('buf')},
     };
     test.deepEqual(actual, expected, 'Should not mangle Buffer instances.');
     test.done();
